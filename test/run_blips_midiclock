#! /bin/bash -v
# Notes:
# use
# $ jack_lsp -s blips_jack_server
# to list the ports on the jack server, after running this script (keep it running in the background)
# (use SERVER_NAME instead of blips_jack_server if you specified a different one)
# if you don't see system:midi_playback_*
# (* meaning anything) then try specifying
# MIDI_TYPE=seq
# If you can connect to the MIDI playback port, but you don't get any MIDI transmitted, do
# $ jack_lsp -s blips_jack_server -A
# to see which system:midi_playback_* is routed where. You want the one routed
# to the capture port of your soundcard (you can use 'amidi -l' to see the name
# of your soundcard)
# To specify the one you want, do
# $ JACK_MIDI_PLAYBACK_PORT=path:to/port bash test/run_blips_midiclock ...
#
# If you cannot connect to the audio device, you might have to specify a different one, e.g., 
# $ ALSA_DEVICE=hw:0 bash test/run_blips...
# how to find this, I don't exactly know, but I think if you run
# aplay -L
# it will show the available MIDI devices, and the number after 'hw:' is the
# number after DEV= (I think)

on_sigint() { 
    kill -n 9 $JACKD_PROC_ID;
    kill -n 9 $BLIPS_PROC_ID;
    RUNNING=0
    exit 0
};

SERVER_NAME=blips_jack_server
# Use this to specify an alsa device other than hw:1
[ -z $ALSA_DEVICE ] && ALSA_DEVICE=hw:1
# For some setups (e.g., when using M-Audio MIDISport), raw MIDI won't work,
# need to specify MIDI_TYPE=seq
[ -z $MIDI_TYPE ] && MIDI_TYPE=raw
[ -z $JACK_MIDI_PLAYBACK_PORT ] && JACK_MIDI_PLAYBACK_PORT=system:midi_playback_1
[ -z $PORT_SETUP_WAIT_TIME ] && PORT_SETUP_WAIT_TIME=5

# Launch jackd audio server
jackd -n ${SERVER_NAME} -dalsa -d"$ALSA_DEVICE" -X "$MIDI_TYPE" &

JACKD_PROC_ID=$!;

jack_wait -s ${SERVER_NAME} -w;

# launch blips
export JACK_NO_START_SERVER=1;
JACK_DEFAULT_SERVER=${SERVER_NAME} test/blips_midiclock &

BLIPS_PROC_ID=$!;

echo "Wait for ports to show up..."
sleep "$PORT_SETUP_WAIT_TIME"

# connect audio and midi to soundcard
jack_connect -s ${SERVER_NAME} blips:midi_out "$JACK_MIDI_PLAYBACK_PORT"
jack_connect -s ${SERVER_NAME} blips:audio_out system:playback_2

echo "Test running, press CTRL-C to exit.";
trap on_sigint SIGINT;

RUNNING=1

while [ ${RUNNING} ]
do
    sleep 1;
done
